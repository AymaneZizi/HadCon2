one_wire_dualSwitch.c 94:                   printDebug_p(debugLevelEventDebug, debugSystemOWIDualSwitches, __LINE__, filename, PSTR("OWDS write all: %#x, pointer (%p)" ), ptr_owiStruct->value, ptr_owiStruct->ptr_value);
one_wire_octalSwitch.c 88:                   printDebug_p(debugLevelEventDebug, debugSystemOWIOctalSwitches, __LINE__, filename, PSTR("OW8S write all: %#x, pointer (%p)" ), ptr_owiStruct->value, ptr_owiStruct->ptr_value);
PSTR("0x") api.c 2219
PSTR("0x") spiApi.c 1618
PSTR("") adc.c 67
PSTR("address is:%#x") twi_master.c 339
PSTR("ALIV --- alive --- %i") main.c 250
PSTR("all begin %i") one_wire_api_settings.c 52
PSTR("all end %i") one_wire_api_settings.c 62
PSTR("alternatives: NULL ... returning") api.c 1692
PSTR(" and readback matches") read_write_register.c 78
PSTR(" \"") api.c 1712
PSTR("\"") api.c 1714
PSTR(" \"") api.c 1719
PSTR(" *** ") api.c 1772
PSTR(" ") api.c 1804
PSTR("(") api.c 1807
PSTR(", ") api.c 1816
PSTR(") ") api.c 1823
PSTR(" ") api.c 2113
PSTR(" ") api.c 2116
PSTR(" ") api.c 2175
PSTR("apiDebug:invalid command") api_debug.c 131
PSTR("apiDebug:invalid command") api_debug.c 150
PSTR("apiDebugSubCommands:invalid argument") api_debug.c 211
PSTR(" ") api_help.c 301
PSTR(" ") api_help.c 318
PSTR(" ") api_help.c 640
PSTR(" : ") api_help.c 656
PSTR(" ") api_help.c 673
PSTR(" ") api_help.c 678
PSTR("- ") api_show.c 248
PSTR("argument %i is an ID: %s") one_wire.c 766
PSTR("argument %i is NOT an ID") one_wire.c 773
PSTR("argument parsing failed") twi_master.c 101
PSTR("A") spiApi.c 925
PSTR("begin") one_wire_adc.c 936
PSTR("begin") one_wire_api_settings.c 45
PSTR("begin") one_wire_temperature.c 919
PSTR("Brown Out Reset") api_show.c 265
PSTR("B") spiApi.c 928
PSTR("bus: checkBusAndDeviceActivityMasks failed") one_wire.c 1153
PSTR("bus: %i active  (pin pattern %#x owiBusMask %#x)") one_wire_adc.c 608
PSTR("bus: %i active  (pin pattern %#x owiBusMask %#x)") one_wire.c 91
PSTR("bus: %i active  (pin pattern %#x owiBusMask %#x)") one_wire.c 96
PSTR("bus: %i ADCs: NONE (pin pattern %#x owiAdcMask %#x)") one_wire_adc.c 613
PSTR("bus: %i ADCs: some (pin pattern %#x owiAdcMask %#x)") one_wire_adc.c 618
PSTR("bus %i call: ReadADCchannels") one_wire.c 429
PSTR("bus: %i combining %#x to common set of pins %#x)") one_wire_adc.c 624
PSTR("bus: %i combining %#x to common set of pins %#x)") one_wire.c 1158
PSTR("bus: %i differs (pin pattern %#x owiBusMask %#x)") one_wire_adc.c 603
PSTR("bus %i doesn't match owiBusMask (%#x)") one_wire.c 409
PSTR("bus: %i found %i valid devices, within %i trials") one_wire.c 179
PSTR("bus: %i (Mask:%#x) - OWI CRC check failure, skipping current id: %s") one_wire.c 148
PSTR("bus: %i no Device present (pin pattern %#x)") one_wire_adc.c 664
PSTR("bus: %i passive (pin pattern %#x owiBusMask %#x)") one_wire.c 86
PSTR("bus %i: returned %i") one_wire.c 433
PSTR("bus: %i some devices present (pin pattern %#x)") one_wire_adc.c 669
PSTR("bus: %i (%#x), search loop total: %i 1/bus: %i ID: %s") one_wire.c 171
PSTR("bus: mixed sensors, max. t_conv: %f (pins %#x)") one_wire_temperature.c 749
PSTR("bus mode: %S, bus state %S, changed: %S") can.c 207
PSTR("bus: only DS18B20, adopting max. t_conv to: %i ms (pins %#x)") one_wire_temperature.c 743
PSTR("bus: owiDeviceMask = %#x") one_wire.c 1147
PSTR("bus_pattern %x : returned %i") one_wire.c 445
PSTR("bus_pattern: %#x sending command, mask, readout byte") one_wire_adc.c 787
PSTR("bus_pattern: %#x starting conversion sequence") one_wire_adc.c 706
PSTR("bus state %S") can.c 1560
PSTR("bus state %S") can.c 1571
PSTR("#bytes/#digits %i/%i") spiApi.c 1591
PSTR("call Communication_Error") api_show.c 109
PSTR("call: FindFamilyDevicesAndAccessValues") one_wire_adc.c 250
PSTR("call: FindFamilyDevicesAndGetValues family code: %x") one_wire_temperature.c 171
PSTR("call showMem for: %s") api_show.c 87
PSTR("CAN bit timing failed") can.c 893
PSTR(" ") can.c 474
PSTR("CAN canReady %i received -> ErrorHandling") main.c 302
PSTR("CAN canReady %i received") main.c 293
PSTR("CAN canReady %i reset to %i") main.c 310
PSTR("CAN error handling: general status") can.c 1231
PSTR("CAN error handling: mob status") can.c 1227
PSTR("CANGIT: %#x") can.c 1150
PSTR("CANGIT: %#x") can.c 1156
PSTR("CANGIT: %#x") can.c 1162
PSTR("CANGIT: %#x") can.c 1168
PSTR("canShowMObError: bit index: %i") can.c 1191
PSTR("CAN %s") main.c 275
PSTR("CAN Timer Overrun received") main.c 328
PSTR("CAN TIMER OVR %s") main.c 319
PSTR("channel %i failed") relay.c 179
PSTR("channel %i failed") relay.c 200
PSTR("channel %i failed") relay.c 217
PSTR("channel index %i") adc.c 93
PSTR("checkBusAndDeviceActivityMasks bus: %i active  (pin pattern %#x owiBusMask %#x)") one_wire.c 1095
PSTR("checkBusAndDeviceActivityMasks bus: %i Devices: NONE (pin pattern %#x owiDeviceMask %#x)") one_wire.c 1104
PSTR("checkBusAndDeviceActivityMasks bus: %i Devices: some (pin pattern %#x owiDeviceMask %#x)") one_wire.c 1113
PSTR("checkBusAndDeviceActivityMasks bus: %i differs (pin pattern %#x owiBusMask %#x)") one_wire.c 1086
PSTR("checkBusAndDeviceActivityMasks bus: %i passed all criteria)") one_wire.c 1119
PSTR("chipSelect #%i already in use") spi.c 98
PSTR("Choose_Function: call finished") api.c 1269
PSTR("coming from: %S, try to set bus state back to %S") can.c 225
PSTR("command argument position %i (\"%s\") api.c 2270
PSTR("command argument position (\"%s\") api.c 2411
PSTR("command failed") spiApi.c 442
PSTR("conversion done") one_wire_temperature.c 887
PSTR("CRC16 check reached max trials (%i) on send byte") one_wire_adc.c 844
PSTR("CRC16 check send byte failed - computed %#x != received %#x") one_wire.c 1326
PSTR("CRC16 check send byte failed - trial no. %i, computed %#x != received %#x") one_wire_adc.c 836
PSTR("CRC16 computing inputs:") one_wire.c 1305
PSTR("CRC16 computing no %i: %#x") one_wire.c 1358
PSTR("C") spiApi.c 931
PSTR("data[%i]=%x") spiApi.c 1637
PSTR("DEBUG") api.c 1803
PSTR("device DS2405 not supported any more") one_wire_simpleSwitch.c 61
PSTR("devices detected") one_wire.c 106
PSTR("disabled: ") jtag.c 167
PSTR("disabling JTAG not ALLOWED") jtag.c 65
PSTR(" done") one_wire_temperature.c 479
PSTR(" done") one_wire_temperature.c 501
PSTR("D") spiApi.c 934
PSTR("end") one_wire_adc.c 260
PSTR("end") one_wire_api_settings.c 84
PSTR("end") one_wire_temperature.c 969
PSTR("entered twiMaster") twi_master.c 96
PSTR("entering canShowGeneralStatusError") can.c 1122
PSTR("entering 'Read from Slave'") twi_master.c 395
PSTR("entering 'Write to Slave'") twi_master.c 337
PSTR("error accessing ADC channel %i") adc.c 161
PSTR("Error reading %s") one_wire.c 687
PSTR("E") spiApi.c 937
PSTR("External Reset") api_show.c 268
PSTR("FALSE") api.c 2345
PSTR("FALSE") jtag.c 168
PSTR(" (FALSE)") one_wire_api_settings.c 121
PSTR("FALSE") one_wire_temperature.c 275
PSTR("FALSE") one_wire_temperature.c 279
PSTR(" FALSE") one_wire_temperature.c 326
PSTR(" FALSE") one_wire_temperature.c 366
PSTR("FALSE") relay.c 226
PSTR("FALSE") relay.c 230
PSTR("FALSE") relay.c 250
PSTR("FALSE") relay.c 254
PSTR("FALSE") relay.c 258
PSTR("FALSE") relay.c 262
PSTR("FALSE") relay.c 266
PSTR("FALSE") relay.c 327
PSTR("FALSE") spiApi.c 1850
PSTR("fcn:FindFamilyDevicesAndGetValues: 1st argument is NULL ... skipping") one_wire.c 357
PSTR("fcn:FindFamilyDevicesAndGetValues: selected device index (arg 4) is out of range ... skipping") one_wire.c 384
PSTR("fcn:owiFindFamilyDevicesAndGetValues: error while searching for id's index ... skipping") one_wire.c 377
PSTR("fcn:%s: wrong input source:%i exceeds max. of %i\n") relay.c 566
PSTR("final common pins: %#x") one_wire_adc.c 631
PSTR("final common pins: %#x") one_wire.c 1163
PSTR("finished (Timeout: current = %#x, all = %#x)") one_wire_temperature.c 843
PSTR("following all default error messages:") api_show.c 215
PSTR("found %i devices") one_wire.c 194
PSTR("found %i strings") api.c 918
PSTR("found %i temp devices") one_wire_temperature.c 257
PSTR("F") spiApi.c 940
PSTR("get index of keyword: %s") api.c 1113
PSTR("getNumericValueFromParameter: wrong input parameters") api.c 2264
PSTR("getUnsignedNumericValueFromParameterString: NULL input parameters") api.c 2369
PSTR("going to read from twi/i2c") twi_master.c 113
PSTR("going to set ports for JTAG from: PING:%#x, PORTG:%#x") api.c 2002
PSTR("going to switch JTAG off - status: PING:%#x, PORTG:%#x") jtag.c 127
PSTR("going to switch JTAG on - status: PING:%#x, PORTG:%#x") jtag.c 142
PSTR("going to write to twi/i2c") twi_master.c 118
PSTR("G") spiApi.c 943
PSTR("H") api.c 2319
PSTR("having changed ports for JTAG to: PING:%#x, PORTG:%#x") api.c 2007
PSTR("having switched JTAG off - status: PING:%#x, PORTG:%#x") jtag.c 131
PSTR("having switched JTAG on - status: PING:%#x, PORTG:%#x") jtag.c 146
PSTR("HIGH") api.c 2320
PSTR("high NULL pointer") relay.c 723
PSTR(" ignore conv. response: ") one_wire_temperature.c 536
PSTR("ignoring TX calls for max. %.1f s") can.c 268
PSTR("ignoring TX calls for max. %.1f s, no further notification") can.c 260
PSTR("init 1-wire ADCs: failed to set: OUTPUT CONTROL, RESOLUTION") one_wire_adc.c 406
PSTR("init 1-wire ADCs: failed to set: POR, ALARM ENABLE, INPUT RANGE") one_wire_adc.c 411
PSTR("init 1-wire ADCs: failed to set: VCC_CONTROL_BYTE") one_wire_adc.c 420
PSTR("inital call needs twice a conversion") one_wire_adc.c 587
PSTR("init finished") api.c 2037
PSTR("Init") relay.c 531
PSTR("input: '%s' maxLength %i") api.c 2206
PSTR("invalid argument index") one_wire.c 741
PSTR("invalid argument") one_wire_temperature.c 551
PSTR("invalid arguments") one_wire_adc.c 188
PSTR("invalid arguments") one_wire_temperature.c 211
PSTR("invalid channel argument") relay.c 713
PSTR("invalid channel argument") relay.c 866
PSTR("invalid channel number [0-7]") relay.c 1078
PSTR("invalid channel number [0-7]") relay.c 1094
PSTR("invalid channel number, enabled JTAG allows ch 0-3") relay.c 1067
PSTR("invalid channel number, enabled JTAG allows ch 0-3") relay.c 1202
PSTR("invalid channel number, enabled JTAG allows ch 0-3") relay.c 1360
PSTR("invalid channel number") relay.c 1211
PSTR("invalid command argument") api_debug.c 233
PSTR("invalid command argument") api_debug.c 261
PSTR("invalid command argument") relay.c 1383
PSTR("invalid command argument") relay.c 335
PSTR("invalid command argument") relay.c 406
PSTR("invalid command argument") relay.c 455
PSTR("invalid command argument") relay.c 896
PSTR("invalid command argument") relay.c 927
PSTR("invalid family code, exceeding limits [0,0xFF]") one_wire.c 234
PSTR("invalid family code %i") one_wire.c 232
PSTR("invalid number of arguments") adc.c 76
PSTR("invalid number of arguments") jtag.c 183
PSTR("invalid number of arguments") one_wire.c 994
PSTR("invalid number of arguments") one_wire_temperature.c 306
PSTR("invalid number of arguments") one_wire_temperature.c 346
PSTR("invalid number of arguments") one_wire_temperature.c 387
PSTR("invalid number of arguments") one_wire_temperature.c 417
PSTR("invalid number of arguments") one_wire_temperature.c 463
PSTR("invalid number of arguments") one_wire_temperature.c 514
PSTR("invalid number of arguments") relay.c 473
PSTR("invalid pointer (NULL)") relay.c 1349
PSTR("isNumericalConstantOne: NULL input") api.c 2311
PSTR("isNumericalConstantOne: NULL input") api.c 2340
PSTR("%i") spiApi.c 1488
PSTR("ISR (%i): CANIT_vect occurred, canReady: %i ---  BEGIN of ISR SREG=%x") can.c 1429
PSTR("ISR (%i): CANIT_vect occurred, canReady: %i") can.c 1457
PSTR("ISR (%i): CANIT_vect occurred, canReady: %i, MOb (%i) error occurred, setting canReady to %i") can.c 1451
PSTR("ISR (%i): CANIT_vect occurred, canReady: %i, TXOK received") can.c 1478
PSTR("ISR (%i): CANIT_vect occurred, MOb (%i), CANCDMOB: %#x") can.c 1460
PSTR("ISR (%i): CANIT_vect occurred, MOb (%i), CANCDMOB: %#x") can.c 1466
PSTR("ISR (%i): CANIT_vect occurred, MOb (%i) error occurred, CANSTMOB before/after acknowledge: %#x/%#x,") can.c 1447
PSTR("(%i us)") can.c 391
PSTR("(%i us)") can.c 427
PSTR("JTAG Reset") api_show.c 262
PSTR("keywordIndex of %s is %i") api.c 769
PSTR("keyword %s doesn't match") api.c 1127
PSTR("keyword %s matches, index %i ") api.c 1122
PSTR("L") api.c 2347
PSTR("leaving 'Read from Slave'") twi_master.c 414
PSTR("leaving twiMaster") twi_master.c 127
PSTR("leaving 'Write to Slave'") twi_master.c 353
PSTR("length of \"%s\" is %i") api.c 2243
PSTR("LOW") api.c 2348
PSTR("low NULL pointer") relay.c 718
PSTR("LOW") spiApi.c 1853
PSTR(" (LSB/little endian)") spiApi.c 1279
PSTR("-------------------------") main.c 418
PSTR("make conversion finished (owiAdcTimeoutMask = %#x)") one_wire_adc.c 677
PSTR("max: %i") api.c 738
PSTR("max #slots (%i) reached") spiApi.c 1398
PSTR("message %s") one_wire.c 84
PSTR("misc temp commands keyword %s matches") one_wire_temperature.c 249
PSTR("MOb#: %i CANSTMOB: %#x") can.c 1214
PSTR(" (MSB/big endian)") spiApi.c 1276
PSTR("no") can.c 210
PSTR("no_device_is_connected_to_the_bus") one_wire.c 183
PSTR("no Device present (pin pattern %#x)") one_wire.c 1198
PSTR("no Device present (pin pattern %#x)") one_wire_temperature.c 754
PSTR("no matching ID found") one_wire.c 372
PSTR("no matching ID was found") one_wire_adc.c 257
PSTR("no matching ID was found") one_wire_temperature.c 178
PSTR("no supported 1-wire temperature device present") one_wire_temperature.c 183
PSTR("no supported 1-wire temperature device present") one_wire_temperature.c 488
PSTR("no supported 1-wire temperature device present") one_wire_temperature.c 510
PSTR("not a number - value followed by non-space character: %i, '%c'") api.c 2233
PSTR("not a sub command") spiApi.c 433
PSTR("no temp sensors at all") one_wire_temperature.c 702
PSTR(" --- not implemented ") api_help.c 660
PSTR("not supported CAN Baudrate (%i) / CPU freq. (%i) combination") can.c 832
PSTR("not supported CAN Baudrate (%i) / CPU freq. (%i) combination") can.c 879
PSTR("not supported CAN Baudrate (%i) / CPU freq. (%i) combination") can.c 886
PSTR("NULL pointer received") spiApi.c 1539
PSTR("NULL pointer received") spiApi.c 1569
PSTR("number of arguments: %i") one_wire.c 850
PSTR("number of arguments %i") twi_master.c 136
PSTR("number of string elements found: %i") api.c 759
PSTR("numeric length of argument '%s' is %i") one_wire.c 747
PSTR("OFF") api.c 2346
PSTR("OFF") spiApi.c 1847
PSTR("OK") spiApi.c 424
PSTR("ON") api.c 2318
PSTR("") one_wire_adc.c 583
PSTR("") one_wire.c 215
PSTR(" ") one_wire_temperature.c 499
PSTR("") one_wire_temperature.c 677
PSTR("only EVEN number of digits allowed (%s)") spiApi.c 1581
PSTR("overlapping with channel inputs") relay.c 1367
PSTR("OW8S read all") one_wire_octalSwitch.c 75
PSTR("OW8S read ID") one_wire_octalSwitch.c 82
PSTR("OW detect presence busy time out") OWISWBitFunctions.c 456
PSTR("OWDS read all") one_wire_dualSwitch.c 81
PSTR("OWDS read ID") one_wire_dualSwitch.c 88
PSTR("OWDS write ID: %#x pointer (%p)") one_wire_dualSwitch.c 110
PSTR("OWDS write ID: %#x pointer (%p)") one_wire_octalSwitch.c 104
PSTR("OWI ADC Conversion Error id: %s (bus_pattern %#x)") one_wire_adc.c 948
PSTR("OWI ADC Conversion failed (bus_pattern: %#x)") one_wire_adc.c 878
PSTR("OWI ADC Conversion failed (bus_pattern: %#x)") one_wire_adc.c 892
PSTR("OWI ADC Conversion failed (id: %s)") one_wire_adc.c 902
PSTR("OWI ADC Conversion timeout (bus_pattern: %#x") one_wire_adc.c 889
PSTR("OWI ADC Conversion timeout (id: %s") one_wire_adc.c 899
PSTR("OWI Adc Conversion timeout (>%i ms) (id: %s)") one_wire_adc.c 900
PSTR("OWI Adc Conversion timeout (>%i ms) on bus_mask (%#x)") one_wire_adc.c 890
PSTR("owiApiFlag:invalid argument") one_wire_api_settings.c 114
PSTR("owiApi:invalid argument") one_wire_api_settings.c 77
PSTR("owi bus mask didn't match") one_wire.c 676
PSTR("OWI CRC check internal failure") one_wire.c 152
PSTR("OWI CRC check passed") one_wire.c 144
PSTR("OWI Dual Switch write value timeout") one_wire_dualSwitch.c 243
PSTR("OWI_Init() doesn't support HADCON_VERSION %i") OWISWBitFunctions.c 147
PSTR("OWI_Init(): missing I2C support") OWISWBitFunctions.c 137
PSTR("OWI_Init()") OWISWBitFunctions.c 130
PSTR("OWI Octal Switch write value timeout") one_wire_octalSwitch.c 235
PSTR("OWI Temperature Conversion timeout (>%i ms, %s, bus_pattern %#x vs. mask: %#x)") one_wire_temperature.c 931
PSTR("OWI Temperature Conversion timeout") one_wire_temperature.c 895
PSTR("OW read bit busy time out") OWISWBitFunctions.c 352
PSTR("parasitic conversion done") one_wire_temperature.c 785
PSTR("parasitic conversion ") one_wire_temperature.c 773
PSTR("parasitic devices NONE on pins %#x ") one_wire.c 1274
PSTR("parasitic devices SOME on pins %#x ") one_wire.c 1261
PSTR("para to byte[]") spiApi.c 1532
PSTR("parsing UartStruct") twi_master.c 133
PSTR("passive (bus pattern %#x owiBusMask %#x)") one_wire_adc.c 940
PSTR("passive (bus pattern %#x owiBusMask %#x)") one_wire_temperature.c 923
PSTR("pin number [0-7]") relay.c 1109
PSTR("pin number [0-7]") relay.c 1124
PSTR("port/pin in use") spiApi.c 1413
PSTR("Power On Reset") api_show.c 271
PSTR("preparation of send message: id %x mask %x RTR %x length %x") can.c 275
PSTR("READ ACCESS") one_wire.c 425
PSTR("read success") twi_master.c 405
PSTR("read/write success") twi_master.c 422
PSTR("recursive call of show with parameter \"%s\" (%p)") api_show.c 66
PSTR("recursive call of %s with parameter \"%s\" (%p)") one_wire_api_settings.c 58
PSTR("RECV HELP *** all response: RECV SHOW command_key1 ... ") api_show.c 180
PSTR("RECV HELP ***               ...               ... ") api_show.c 182
PSTR("RECV HELP ***    ") api_show.c 192
PSTR("RECV HELP *** cmd response: RECV SHOW command_key") api_show.c 186
PSTR("RECV HELP ***     command : SHOW [command_key]") api_show.c 178
PSTR("RECV HELP ***               RECV SHOW command_keyN ... ") api_show.c 184
PSTR("RECV HELP *** SHOW available command_keys") api_show.c 188
PSTR("RECV HELP *** show (internal) settings") api_show.c 176
PSTR("RECV PING mechanism is %s") api.c 2049
PSTR("- ") relay.c 204
PSTR("- ") relay.c 221
PSTR("relay enable: %i - thr valid: %i") main.c 409
PSTR("Relay Init Failed") api.c 1944
PSTR("Relays enable and valid") main.c 396
PSTR("Relays") main.c 392
PSTR("remainder '%s'") api.c 911
PSTR("resetting CAN send parameters") can.c 406
PSTR("retrieved data and end") one_wire_adc.c 1091
PSTR("'RLTH invalid input port for external polarity") relay.c 513
PSTR("%s0x%lx") api_debug.c 192
PSTR("%s0x%lx") api_debug.c 388
PSTR("%s%4i") api.c 1810
PSTR("%s (%4i, %s): %s: thresholds high [%#x] <= low [%#x] ... disabling") relay.c 624
PSTR("%s (%4i, %s): %s: undefined state ... disabling") relay.c 638
PSTR("%s (%4i, %s): unknown state") relay.c 840
PSTR("%s all response: %s --- ... ") api_help.c 360
PSTR("%s all response: %s command_key1 ... ") api_help.c 377
PSTR("%s and readback does not match (%x)") read_write_register.c 84
PSTR("%s\" ---") api.c 1726
PSTR("%s ") api_help.c 106
PSTR("%s            ...") api_help.c 160
PSTR("%s                ...") api_help.c 172
PSTR("%s    ") api_help.c 182
PSTR("%s           ...") api_help.c 214
PSTR("%s           ...") api_help.c 244
PSTR("%s    ") api_help.c 288
PSTR("%s    ") api_help.c 296
PSTR("%s    ") api_help.c 307
PSTR("%s    ") api_help.c 314
PSTR("%s    ") api_help.c 368
PSTR("%s               ...               ... ") api_help.c 379
PSTR("%s    ") api_help.c 389
PSTR("%s    ") api_help.c 428
PSTR("%s    ") api_help.c 449
PSTR("%s              [...]              ... ") api_help.c 464
PSTR("%s    ") api_help.c 472
PSTR("%s    ") api_help.c 516
PSTR("%s---") api_help.c 559
PSTR("%s ") api_help.c 650
PSTR("%s ") api_help.c 669
PSTR("%s---") api_help.c 85
PSTR("%s available commands are:") api_help.c 605
PSTR("%s available debug levels are:") api_help.c 290
PSTR("%s available masks are:") api_help.c 309
PSTR("%sbus mask: ") one_wire.c 271
PSTR("%s    case RTR 0") api_help.c 124
PSTR("%s    case RTR 1") api_help.c 132
PSTR("%s cmd response: %s *** ... ") api_help.c 362
PSTR("%s cmd response: %s command_key") api_help.c 383
PSTR("%s command keyword: %s [ID] on/off/toggle") api_help.c 224
PSTR("%s command : OWRP") api_help.c 262
PSTR("%s command read : %s [ID]") api_help.c 220
PSTR("%s command : %s <1/0> <address> <data length> <data bytes1 ... 8>") help_twis.c 32
PSTR("%s command      : %s [<ADC Channel>] ") api_help.c 206
PSTR("%s command : %s ") api_help.c 250
PSTR("%s command : %s [???]]") api_help.c 344
PSTR("%s command : %s [???]") api_help.c 455
PSTR("%s command : %s") api_help.c 479
PSTR("%s command : %s [???]") api_help.c 489
PSTR("%s command : %s [???]") api_help.c 495
PSTR("%s command : %s [???]") api_help.c 501
PSTR("%s command : %s [???]") api_help.c 508
PSTR("%s command : %s [???]") api_help.c 523
PSTR("%s command : %s [???]") api_help.c 529
PSTR("%s command : %s <bus mask>") api_help.c 256
PSTR("%s command : %s <byte> [<pin_mask>]") api_help.c 435
PSTR("%s       command      : %s CAN-Message-ID ID-Range 0 <Number of data bytes> Data0 ... Data7]") api_help.c 126
PSTR("%s       command      : %s CAN-Message-ID ID-Range 1 <Number of requested data bytes>]") api_help.c 134
PSTR("%s command : %s CAN-Message-ID ID-Range") api_help.c 143
PSTR("%s command : %s CAN-Message-ID ID-Range") api_help.c 150
PSTR("%s       command      : %s CAN-Message-ID ID-Range [RTR <Number of data bytes> Data0 ... Data7] ") api_help.c 122
PSTR("%s command : %s [CMD]") api_help.c 358
PSTR("%s command : %s [command_key]") api_help.c 375
PSTR("%s command : %s [command_key_word]<") api_help.c 460
PSTR("%s command : %s <command_key_word> [arguments] ") api_help.c 441
PSTR("%s command : %s <command_key_word> [<pin_mask> [arguments ...]] ") api_help.c 420
PSTR("%s command : %s [<Family Code>]") api_help.c 240
PSTR("%s command  : %s [ID]") api_help.c 156
PSTR("%s command : %s [ID]") api_help.c 236
PSTR("%s command : %s [ID [flag_conv] | <command_keyword> [arguments] ] ") api_help.c 168
PSTR("%s command : %s [ID [flag_conv [flag_init]]]") api_help.c 210
PSTR("%s command : %s ID <pin_mask>") api_help.c 396
PSTR("%s command : %s <ID> - reads single switch") api_help.c 537
PSTR("%s command : %s <ID> <value> - writes <value> to single switch") api_help.c 541
PSTR("%s command : %s [keyword [value[s]]]") api_help.c 268
PSTR("%s command : %s [keyword [value[s]]]") api_help.c 274
PSTR("%s command : %s [level]") api_help.c 328
PSTR("%s command : %s [level [mask]]") api_help.c 282
PSTR("%s command : %s [mask]") api_help.c 336
PSTR("%s command : %s [<pin_mask>]") api_help.c 402
PSTR("%s command : %s [<pin_mask>]") api_help.c 414
PSTR("%s command : %s <pin_mask> <delay> <timeout: N (times delay)> ") api_help.c 408
PSTR("%s command : %s - reads all switches and shows the IDs") api_help.c 535
PSTR("%s command      : %s Register") api_help.c 198
PSTR("%s command      : %s Register [Value] ") api_help.c 189
PSTR("%s command : %s <value> - writes <value> to all switches") api_help.c 539
PSTR("%s command write: %s [ID] value") api_help.c 222
PSTR("%s        [DEBG >=%i]  : %s CAN-Message-ID \"%s\"") api_help.c 130
PSTR("%s DEBUG") waveform_generator_registers.c 77
PSTR("second argument sets init_flag to: %i ") one_wire.c 927
PSTR("second argument sets init_flag to: %i ") one_wire.c 948
PSTR("selecting mob 0 (no RTR)") can.c 281
PSTR("selecting mob 1 (RTR)") can.c 287
PSTR("%selements: %#x (%#i)") spiApi.c 1707
PSTR("send w/o RTR: timeout") can.c 392
PSTR("send w/ RTR: timeout") can.c 428
PSTR("setCanBitTiming: bit rate pre scaler calculated: %i") can.c 612
PSTR("setCanBitTiming: bit rate pre scaler (%i) auto corrected phase 1/2: %i/%i") can.c 683
PSTR("setCanBitTiming: bit rate pre scaler (%i) forbids multiple sample points") can.c 674
PSTR("setCanBitTiming: bit rate pre scaler (%i) forbids sync jump width (%i) > 0") can.c 666
PSTR("setCanBitTiming: bit rate pre scaler (%i) out of [%i,%i]") can.c 650
PSTR("setCanBitTiming: no. of Time Quanta calculated: %i") can.c 627
PSTR("setCanBitTiming: no. of Time Quanta (%i) and bit rate scaler (%i) are both (un)set") can.c 581
PSTR("setCanBitTiming: no. of Time Quanta (%i) out of [8,25]") can.c 637
PSTR("setCanBitTiming: no. of Time Quanta (%i) out of [8,25]") can.c 640
PSTR("setCanBitTiming: phase segment 1 (%i TQ) out of [%i,%i]") can.c 734
PSTR("setCanBitTiming: phase segment 2 (%i TQ) out of [%i,%i]") can.c 744
PSTR("setCanBitTiming: propagation time segment (%i TQ) out of [%i,%i]") can.c 725
PSTR("setCanBitTiming: register CANBT1/2/3: %x / %x / %x") can.c 701
PSTR("setCanBitTiming: sync jump width (%i TQ) out of [%i,%i]") can.c 757
PSTR("setParameter[%i]: \"%s\"") spiApi.c 1491
PSTR("%sfound %i devices") one_wire.c 284
PSTR("%s get response: %s level ") api_help.c 332
PSTR("%s get response: %s level mask") api_help.c 286
PSTR("%s get response: %s mask") api_help.c 340
PSTR("show all begin %i") api_show.c 60
PSTR("show all end %i") api_show.c 70
PSTR("show begin") api_show.c 52
PSTR("show end") api_show.c 122
PSTR("show:invalid argument") api_show.c 111
PSTR("show:invalid argument") api_show.c 143
PSTR("SHOW messages") api_show.c 221
PSTR("%s%i") api_debug.c 345
PSTR("%s%i") api_show.c 150
PSTR("%s%i") api_show.c 296
PSTR("%sID: %s") one_wire.c 273
PSTR("%s%i:%i ") spiApi.c 779
PSTR("%s%i %lx") api_debug.c 297
PSTR("%s init micro controller") api_help.c 232
PSTR("%s%i") one_wire_api_settings.c 120
PSTR("%s%i ") one_wire_temperature.c 432
PSTR("%s--- %i seconds to reset (via watchdog)") api.c 2422
PSTR("%s%i:- ") spiApi.c 785
PSTR("%s%i:") spiApi.c 909
PSTR("%s%i %s") relay.c 187
PSTR("%s%i (%#x)") one_wire_temperature.c 402
PSTR("%s%i:%#x ") relay.c 203
PSTR("%s%i:%#x ") relay.c 220
PSTR("%s (%luHz @ %luHz)") spiApi.c 1239
PSTR("%s (MCUSR: %#x)") api_show.c 279
PSTR("%sNONE on pins %#x (pulled HIGH within %i ms)") one_wire.c 1268
PSTR("%s -OK-") twi_master.c 377
PSTR("some devices present (pin pattern %#x)") one_wire.c 1203
PSTR("some devices present (pin pattern %#x)") one_wire_temperature.c 760
PSTR("%s one wire ???") api_help.c 354
PSTR("%s  originally ment to read the pressure in the bus") api_help.c 164
PSTR("%sparasitic devices ") one_wire.c 1246
PSTR("--") spiApi.c 1751
PSTR(",") spiApi.c 958
PSTR(" ") spiApi.c 963
PSTR("%spin%i:%#x ") relay.c 182
PSTR("%s%p") spiApi.c 949
PSTR("%sPULSE %S") waveform_generator_registers.c 94
PSTR("%s(re)init of system") api.c 2436
PSTR("%s reset micro controller waiting %i s (via watchdog") api_help.c 228
PSTR("%sRESET STATUS") waveform_generator_registers.c 82
PSTR("%s response: ALIV ") api_help.c 252
PSTR("%s response: ") api_help.c 145
PSTR("%s response: ") api_help.c 152
PSTR("%s response: ... ") api_help.c 258
PSTR("%s response [ID]: %s ID1 value1") api_help.c 170
PSTR("%s response <keyword>: %s command_key [<corresponding answer/acknowledge>]") api_help.c 176
PSTR("%s       response     : <nothing> ") api_help.c 128
PSTR("%s       response  now: %s CAN_Mob CAN-Message-ID CAN-Length [Data0 ... Data7] ") api_help.c 136
PSTR("%s response now : %s the value %x has been written in Register ") api_help.c 191
PSTR("%s response now : %s the value %x has been written in Register ") api_help.c 200
PSTR("%s response  (read \"1\") help_twis.c 38
PSTR("%s response: %s <acknowledge> ") api_help.c 398
PSTR("%s response: %s [???] ") api_help.c 457
PSTR("%s response: %s [???] ") api_help.c 491
PSTR("%s response: %s [???] ") api_help.c 497
PSTR("%s response: %s [???] ") api_help.c 503
PSTR("%s response: %s [???] ") api_help.c 510
PSTR("%s response: %s [???] ") api_help.c 525
PSTR("%s response: %s [???] ") api_help.c 531
PSTR("%s response: %s <bit mask of used channels> ") api_help.c 404
PSTR("%s response: %s bus mask: 0x<bus mask> ID: <owi ID>") api_help.c 242
PSTR("%s response: %s bus mask: 0x<bus mask> ID :<owi ID>") api_help.c 246
PSTR("%s response: %s <byte> <acknowledge> ") api_help.c 437
PSTR("%s response: %s command_key [<corresponding answer/acknowledge>]") api_help.c 422
PSTR("%s response: %s command_key [<corresponding answer/acknowledge>]") api_help.c 443
PSTR("%s response: %s [command_key_word] <value> ") api_help.c 462
PSTR("%s response: %s [command_key_word] <value> ") api_help.c 466
PSTR("%s response: %s <count of delays, timeout: c<=0> ") api_help.c 410
PSTR("%s response: %s <current state of switch>") api_help.c 543
PSTR("%s response : %s ID1 description1 status1") api_help.c 158
PSTR("%s response: %s ID1 value1.1 ... value1.n") api_help.c 212
PSTR("%s response: %s %s keyword value[s] ") api_help.c 270
PSTR("%s response: %s %s keyword value[s] ") api_help.c 276
PSTR("%s response: %s %s pins 0xXX have been pulled HIGH within XX ms") api_help.c 348
PSTR("%s response: %s %s pins 0xXX have/has parasitic devices") api_help.c 346
PSTR("%s response: %s value ") api_help.c 264
PSTR("%s response: %s <value> ") api_help.c 416
PSTR("%s response: %s <Version> ") api_help.c 481
PSTR("%s       response TODO: %s CAN-Message-ID CAN-Length [Data0 ... Data7] ") api_help.c 138
PSTR("%s response TODO: %s Register Value ") api_help.c 202
PSTR("%s response TODO: %s Register Value (OldValue) ") api_help.c 193
PSTR("%s response (write \"0\") help_twis.c 35
PSTR("%s%s ***") api_help.c 100
PSTR("%s %s ") api_help.c 102
PSTR("%s %s available command_keys") api_help.c 178
PSTR("%s %s available command_keys") api_help.c 364
PSTR("%s %s available command_keys") api_help.c 385
PSTR("%s %s available command_keys") api_help.c 424
PSTR("%s %s available command_keys") api_help.c 445
PSTR("%s %s available command_keys") api_help.c 468
PSTR("%s %s available command_keys") api_help.c 512
PSTR("%s               %s command_keyN ... ") api_help.c 381
PSTR("%s set response: ...") api_help.c 284
PSTR("%s set response: ...") api_help.c 330
PSTR("%s set response: ...") api_help.c 338
PSTR("%s            %s IDX descriptionX statusX ") api_help.c 162
PSTR("%s           %s IDx valueX.1 ... valueX.n ") api_help.c 216
PSTR("%s                %s IDx valueX ") api_help.c 174
PSTR("%sSOME on pins %#x ") one_wire.c 1255
PSTR("'%s'") spiApi.c 1512
PSTR("%s") spiApi.c 1609
PSTR("%s") spiApi.c 1648
PSTR("%sSQUARE %S") waveform_generator_registers.c 90
PSTR("%s%s%s") api.c 1723
PSTR("%s%s %s %s") api_version.c 28
PSTR("%s%S %S") waveform_generator_registers.c 86
PSTR("%s%S TIME PULSE(100ns) %S") waveform_generator_registers.c 98
PSTR("%s %s --- unknown command") api_help.c 548
PSTR("%s %s --- unknown command") api_help.c 582
PSTR("%s %s --- unknown sub command") api_help.c 575
PSTR("starting conversion sequence") one_wire_temperature.c 761
PSTR("starting main (after init)") main.c 232
PSTR("string to byte[]") spiApi.c 1562
PSTR("%s TWI / I2C access (dummy name) ") help_twis.c 29
PSTR("%s value '%i' out of range [9,..,12]") one_wire_temperature.c 451
PSTR("%s%x") api_debug.c 187
PSTR("%s %x") can.c 461
PSTR("%s %x") can.c 479
PSTR("%s %x") one_wire.c 600
PSTR("%s%x") relay.c 234
PSTR("%s%x") relay.c 238
PSTR("%s%x") relay.c 242
PSTR("%s%x") relay.c 246
PSTR("%s%x") relay.c 270
PSTR("%s%x") relay.c 274
PSTR("%s%#x") relay.c 319
PSTR("%s%#x") relay.c 323
PSTR("%s%#x") relay.c 331
PSTR("%s%x") twi_master.c 363
PSTR("%s%x: value %x has been written") read_write_register.c 73
PSTR("%s%x %x") adc.c 171
PSTR("%s %x %x") can.c 476
PSTR("%s%x %x Control Register ") waveform_generator_registers.c 300
PSTR("%s%x %x") read_write_register.c 122
PSTR("%s %x %x %x") can.c 458
PSTR(" system (re)started by: ") api_show.c 253
PSTR("SYST watch dog incarnation no.: ") api_show.c 293
PSTR(" \t") api_help.c 676
PSTR("TEC: %i REC: %i CANGIT: %#x") can.c 1144
PSTR("TEC: %i REC: %i CANGST: %#x") can.c 1128
PSTR("TEC: %i REC: %i CANGST: %#x") can.c 1136
PSTR("Timeout") adc.c 230
PSTR("timer0AScheduler %s") main.c 377
PSTR("timer0A %s") main.c 367
PSTR("timer0 %s") main.c 335
PSTR("timer1 %s") main.c 345
PSTR("too few arguments (%i) %i") twi_master.c 144
PSTR("too many bytes to add") spiApi.c 1642
PSTR("TRUE") api.c 2317
PSTR("UART %s") main.c 260
PSTR("UART string received:%s") api.c 750
PSTR("undefined bus state") can.c 362
PSTR(" UNDEFINED") spiApi.c 1282
PSTR("unknown help mode") api_help.c 629
PSTR("(unknown internal CAN status error %i)") can.c 1235
PSTR("unknown reset reason") api_show.c 275
PSTR("unknown TWI error condition") twi_master.c 437
PSTR("unused mem now %i ") api_show.c 59
PSTR("valid family code %i") one_wire.c 239
PSTR("value %i") adc.c 164
PSTR("value = %i") adc.c 244
PSTR("value out of bounds [1,8]") relay.c 1136
PSTR("value out of bounds [A,F]") relay.c 1159
PSTR("valueString '%s' ") spiApi.c 1596
PSTR("waited %i times a delay of %i ms") one_wire_adc.c 867
PSTR("waited %i times a delay of") one_wire_temperature.c 877
PSTR("waiting for conversion") one_wire_temperature.c 798
PSTR("waiting for send message to finish") can.c 348
PSTR("waiting the remaining %i times") one_wire_temperature.c 883
PSTR("Watchdog Reset") api_show.c 259
PSTR("WRITE ACCESS") one_wire.c 498
PSTR("write argument: invalid arguments") one_wire_dualSwitch.c 124
PSTR("write argument: invalid arguments") one_wire_octalSwitch.c 117
PSTR("write argument: too many arguments") one_wire_adc.c 194
PSTR("write argument: too many arguments") one_wire_dualSwitch.c 129
PSTR("write argument: too many arguments") one_wire_octalSwitch.c 122
PSTR("write argument: too many arguments") one_wire_temperature.c 217
PSTR("write argument: %#x is out of range [0,%#x] ... skipping") one_wire_dualSwitch.c 102
PSTR("write argument: %#x is out of range [0,%#x] ... skipping") one_wire_dualSwitch.c 118
PSTR("write argument: %#x is out of range [0,%#x] ... skipping") one_wire_octalSwitch.c 111
PSTR("write argument: %#x is out of range [0,%#x] ... skipping") one_wire_octalSwitch.c 96
PSTR("write success") twi_master.c 345
PSTR("writing to ADC memory address: %#x \tdata: %#x") one_wire_adc.c 463
PSTR("wrong error index ... returning") api.c 1684
PSTR("wrong error type %i... returning") api.c 1758
PSTR("wrong register address") waveform_generator_registers.c 313
PSTR("%#x") api.c 2406
